 Это описание формата передачи данных между клиентом (html+javascript) и сервером
 Формат JSON
 Конктрентное описание вида данных для каждого случая далее

#### Логинивание (передается в login.cgi) #### 
Клиент должен передать:

{
	jid: "строка jid'a",
	pass: "строка пароля",
	server: "строка адреса сервера"
}

Сервер должен ответить

{
	success: true, 			//или false если не удачно
	sid: "строка session_id" 	//пустая, если не удачно
}

##############################################

### Работа уже залогиненого клиента ###

Клиент:

Главный объект запроса имеет вид

{
	sid: "строка session_id",
	client_req: [атомарные запросы]
}

Атомарные запросы, это объекты на какое-либо действие, их может быть много, они будут в массиве "атомарные запросы"
Виды атомарных запросов:
-Послать сообщение
{
	send_message: {
			to: "jid",
			type: "тип",		//тип сообщения, чатовое или просто
			test: "текст сообщения"
			}
}  
-Получить весь ростер
{get_full_roster:null}

Сервер (ответ сервера):

Главный объект ответа имеет вид

{
	server_resp:[атомарные ответы]
}

Виды атомарных ответов:
-Входящее сообщение
{message:
	{ 
	  from: "jid"
	  type: "тип",
	  text: "текст сообщения"
	}
}
-Изменения в ростере и статусах (передается всегда, при любом запросе пользователя)
{
	roster_diff: [объекты изменения статуса]
}
объект изменения статуса
{
	jid: "jit",
	new_status: "статус"
}
################################

Notes:
Новые объекты будут добавлятся по мере расширения возможностей jabber'а

